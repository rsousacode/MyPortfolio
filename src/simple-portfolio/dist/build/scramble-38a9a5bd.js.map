{"version":3,"file":"scramble-38a9a5bd.js","sources":["../../node_modules/svelte-typewriter/src/modes/scramble.js"],"sourcesContent":["/// <reference path='../types.js' />\nimport { sleep } from '../utils'\n\nlet elementsToScramble = []\n\nconst getMatchingLetters = elementWithScrambledText =>\n\telementsToScramble.find(element => element.currentNode === elementWithScrambledText)\n\nconst scrambleLetters = element => {\n\tconst scrambledText = element.textContent\n\t\t.split('')\n\t\t.map((letter, letterIdx) => {\n\t\t\tconst { matchingLetters } = getMatchingLetters(element)\n\t\t\tconst foundMatchingLetterOrSpace = matchingLetters.includes(letterIdx) || letter === ' '\n\t\t\tconst randomLetter = String.fromCharCode(65 + Math.round(Math.random() * 50))\n\t\t\treturn foundMatchingLetterOrSpace ? letter : randomLetter\n\t\t})\n\t\t.join('')\n\telement.textContent = scrambledText\n}\n\nconst hasMatchingLetter = (elementWithScrambledText, normalText) => {\n\tconst scrambledText = elementWithScrambledText.textContent\n\tnormalText.forEach((letter, i) => {\n\t\tconst { matchingLetters } = getMatchingLetters(elementWithScrambledText)\n\t\t!matchingLetters.includes(i) && letter === scrambledText[i] && matchingLetters.push(i)\n\t})\n}\n\n/** @type {TypewriterModeFn} */\nexport default async ({ elements }, options) => {\n\telementsToScramble = [\n\t\t...elements.map(({ currentNode }) => ({ currentNode, matchingLetters: [] }))\n\t]\n\tawait new Promise(resolve => {\n\t\telements.forEach(async ({ currentNode, text }) => {\n\t\t\tconst scrambleDuration = typeof options.scramble == 'number' ? options.scramble : 3000\n\t\t\tconst startTime = new Date().getTime()\n\t\t\twhile (true) {\n\t\t\t\tscrambleLetters(currentNode)\n\t\t\t\thasMatchingLetter(currentNode, text)\n\t\t\t\tawait sleep(options.interval)\n\t\t\t\tconst scrambledTextMatch = currentNode.textContent != text.join('')\n\t\t\t\tconst didTimeout = new Date().getTime() - startTime < scrambleDuration\n\t\t\t\tif (!scrambledTextMatch || !didTimeout) {\n\t\t\t\t\tresolve()\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentNode.textContent = text.join('')\n\t\t})\n\t})\n\toptions.dispatch('done')\n}\n"],"names":[],"mappings":"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"}